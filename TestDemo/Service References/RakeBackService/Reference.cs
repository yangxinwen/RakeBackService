//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestDemo.RakeBackService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankInfo", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class BankInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string bankNameField;
        
        private string bankValueField;
        
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string bankName {
            get {
                return this.bankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.bankNameField, value) != true)) {
                    this.bankNameField = value;
                    this.RaisePropertyChanged("bankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string bankValue {
            get {
                return this.bankValueField;
            }
            set {
                if ((object.ReferenceEquals(this.bankValueField, value) != true)) {
                    this.bankValueField = value;
                    this.RaisePropertyChanged("bankValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RakeBackService.IRakeBackService")]
    public interface IRakeBackService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRakeBackService/GetBankList", ReplyAction="http://tempuri.org/IRakeBackService/GetBankListResponse")]
        TestDemo.RakeBackService.BankInfo[] GetBankList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRakeBackService/GetBankList", ReplyAction="http://tempuri.org/IRakeBackService/GetBankListResponse")]
        System.Threading.Tasks.Task<TestDemo.RakeBackService.BankInfo[]> GetBankListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRakeBackService/GetBankPager", ReplyAction="http://tempuri.org/IRakeBackService/GetBankPagerResponse")]
        System.Tuple<int, TestDemo.RakeBackService.BankInfo[]> GetBankPager();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRakeBackService/GetBankPager", ReplyAction="http://tempuri.org/IRakeBackService/GetBankPagerResponse")]
        System.Threading.Tasks.Task<System.Tuple<int, TestDemo.RakeBackService.BankInfo[]>> GetBankPagerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRakeBackService/AddBank", ReplyAction="http://tempuri.org/IRakeBackService/AddBankResponse")]
        bool AddBank(TestDemo.RakeBackService.BankInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRakeBackService/AddBank", ReplyAction="http://tempuri.org/IRakeBackService/AddBankResponse")]
        System.Threading.Tasks.Task<bool> AddBankAsync(TestDemo.RakeBackService.BankInfo info);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRakeBackServiceChannel : TestDemo.RakeBackService.IRakeBackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RakeBackServiceClient : System.ServiceModel.ClientBase<TestDemo.RakeBackService.IRakeBackService>, TestDemo.RakeBackService.IRakeBackService {
        
        public RakeBackServiceClient() {
        }
        
        public RakeBackServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RakeBackServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RakeBackServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RakeBackServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestDemo.RakeBackService.BankInfo[] GetBankList() {
            return base.Channel.GetBankList();
        }
        
        public System.Threading.Tasks.Task<TestDemo.RakeBackService.BankInfo[]> GetBankListAsync() {
            return base.Channel.GetBankListAsync();
        }
        
        public System.Tuple<int, TestDemo.RakeBackService.BankInfo[]> GetBankPager() {
            return base.Channel.GetBankPager();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<int, TestDemo.RakeBackService.BankInfo[]>> GetBankPagerAsync() {
            return base.Channel.GetBankPagerAsync();
        }
        
        public bool AddBank(TestDemo.RakeBackService.BankInfo info) {
            return base.Channel.AddBank(info);
        }
        
        public System.Threading.Tasks.Task<bool> AddBankAsync(TestDemo.RakeBackService.BankInfo info) {
            return base.Channel.AddBankAsync(info);
        }
    }
}
